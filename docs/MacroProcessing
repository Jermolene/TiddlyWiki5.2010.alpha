A macro is a piece of special markup that introduces dynamic content into TiddlyWiki. A single macro can be applied to a DOM element by adding the class {{{tw_macro}}} and the custom attribute {{{data-tw-macro}}} containing the name of the macro. Most macros require additional parameters in the custom attribute {{{data-tw-params}}}) or in sub-elements of the macro element.

The macro dynamically modifies the appearance or content of the element. When necessary macros are automatically updated if any  of the underlying tiddlers change.

The {{{$tw.macro.initMacros()}}} function iterates through DOM elements and their children, instantiating all the macros it finds. A similar function {{{$tw.macro.refreshMacros()}}} is used to selectively refresh macros in response to changes in the tiddler store. Both functions look for the class {{{macro}}} to identify elements with macros attached, and also for the class {{{ignoreMacros}}} which causes it to ignore any macros attached to an element or its children. Macros are responsible for creating or refreshing any macros amongst their children.

Macros are implemented as JavaScript objects in the {{{$tw.macros.*}}} namespace. An instance of a macro object is tied to a particular DOM element that is the root of its visual representation. The macro object is referenced by the jQuery {{{data("tw_macro")}}} member. Care needs to be taken in maintaining this reference if the DOM element is replaced with a different one.

Methods required on macro objects:

new Macro(elem,options) - Constructs a macro object from the attributes found on a macro element in the DOM, stores it in {{{data("tw_macro")}}}, refreshes the DOM and returns the macro element

new Macro(paramString,options) - Constructs a new macro element and attaches a macro object, constructed from the macro name and parameter string. The macro element is returned

macro.refresh(options) - Update an instance of a macro in response to a potential change in one of the underlying tiddlers

options.tiddler: the $tw.Tiddler in whose context this macro is being rendered